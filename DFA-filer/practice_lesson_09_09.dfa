#! NX/KF 4.0
DefClass: Colored_Block_XML (ug_base_part);
    (number parameter) my_height: 50;
    (number parameter) my_width: 50;
    (number parameter) my_length: 50; 
    # Colored volumes thresholds - yellow in between red and green
    (number parameter) red: 1000000; # above
    (number parameter) green: 1000; # below

(child) block1: 
    {
        class, ug_block;
        length, my_length:;
        width, my_width:;
        height, my_height:;
        origin, getPosByXML:(); #point(0, 0, 0);
    };

# Body colored depending on the volume of the block
(Child) body_colored: 
{ 
  Class, ug_body; 
  Feature, {block1:};  
  Layer, 1; 
  color, if (getVolume:(block1:length:, block1:width:, block1:height:) > red:) then ug_askClosestColor(RED) 
	   else if(getVolume:(block1:length:, block1:width:, block1:height:) < green:) then ug_askClosestColor(GREEN)
	          else ug_askClosestColor(YELLOW); 
};

(child) xml_parser:
{
	class, ug_xml_parser;
	xml_filename, "C:\Users\Eldar\Desktop\xmls\practice_lesson_09_09.xml";
};

(Method Number) getVolume:(Number $length, Number $width, Number $height)
@{
  $length * $width * $height;
};

(list parameter) X_XML: xml_parser:get_xml_data:("x_");
(list parameter) Y_XML: xml_parser:get_xml_data:("y_");
(list parameter) Z_XML: xml_parser:get_xml_data:("z_");

(Method Point) getPosByXML:()
@{
   $ret << Point(ug_askValueOfExpressionStr(nth(1, nth(1, X_XML:))), 
			ug_askValueOfExpressionStr(nth(1, nth(1, Y_XML:))), 
			ug_askValueOfExpressionStr(nth(1, nth(1, Z_XML:)))
		);
   $ret;
};

(point parameter) Pos_XML: getPosByXML:();

